// Moved this to a separate file so that the definitions could come after level is loaded
// due to bugs in Delve.
// Also it's probably just good to separate things into files.

// ============================================================
// === Updates
// ============================================================

// ---------------------------------------
// Motion!

ic pacman_facing_is_unit_vec(vx,vy) {
    pacman_facing_x(vx) and pacman_facing_y(vy) implies
        {-1.0; 0.0; 1.0}(vx) and {-1.0; 0.0; 1.0}(vy)
        and vx != vy and (vx+vy = 1 or vx+vy = -1)
}
ic ghost_facing_is_unit_vec(g,vx,vy) {
    ghost_facing_x(g, vx) and ghost_facing_y(g, vy) implies
        {-1.0; 0.0; 1.0}(vx) and {-1.0; 0.0; 1.0}(vy)
        and vx != vy and (vx+vy = 1 or vx+vy = -1)
}


def pacman_move_x = pacman_facing_x
def pacman_move_y = pacman_facing_y


// Moving Pacman based on controller input

def computed_new_x_pacman = ((pacman_x + pacman_move_x - 1.0) % grid_w) + 1.0
def computed_new_y_pacman = ((pacman_y + pacman_move_y - 1.0) % grid_h) + 1.0
//def computed_new_ghost[g in ghost] = ghost_x[g] + ghost_move_x[g], ghost_y + ghost_move_y[g]

def valid_move_pacman =
    computed_new_x_pacman(x) and computed_new_y_pacman(y)
    and not wall(x,y)
    from x,y

// ***** On :tick, update positions ***********

// Update positions based on pending moves.
def delete[:pacman_x](v) = insert(:tick) and valid_move_pacman() and pacman_x(v)
def delete[:pacman_y](v) = insert(:tick) and valid_move_pacman() and pacman_y(v)
def insert[:pacman_x](v) = insert(:tick) and valid_move_pacman() and computed_new_x_pacman(v)
def insert[:pacman_y](v) = insert(:tick) and valid_move_pacman() and computed_new_y_pacman(v)

//def delete[:ghost_pos](g, x,y) = insert(:tick) and computed_new_ghost_pos(g,_,_) and ghost_pos(m,x,y)
//def insert[:ghost_pos](g, x,y) = insert(:tick) and computed_new_ghost_pos(g,x,y)


// -- Eating! -------------------------------
def delete[:dot](x,y) = dot(x,y) and pacman_x(x) and pacman_y(y)

def delete[:superdot](x,y) = superdot(x,y) and pacman_x(x) and pacman_y(y)

// Every time we delete a dot, add a point
def insert[:score](v) = delete[:dot](_,_) and v = score+1.0
def delete[:score](v) = delete[:dot](_,_) and score(v)

def insert[:score](v) = delete[:superdot](_,_) and v = score+10.0
def delete[:score](v) = delete[:superdot](_,_) and score(v)
